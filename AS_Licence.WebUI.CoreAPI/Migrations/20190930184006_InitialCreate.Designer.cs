// <auto-generated />
using System;
using AS_Licence.Data.Repository.Host.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AS_Licence.WebUI.CoreAPI.Migrations
{
    [DbContext(typeof(EfAsLicenceContext))]
    [Migration("20190930184006_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AS_Licence.Entities.Model.Customer.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDateTime");

                    b.Property<string>("CustomerEMail");

                    b.Property<bool>("CustomerIsActive");

                    b.Property<string>("CustomerName");

                    b.Property<string>("CustomerPhone");

                    b.Property<DateTime?>("UpdatedDateTime");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("AS_Licence.Entities.Model.CustomerComputerInfo.CustomerComputerInfo", b =>
                {
                    b.Property<int>("CustomerComputerInfoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDateTime");

                    b.Property<string>("CustomerComputerInfoHddSerialCode");

                    b.Property<string>("CustomerComputerInfoMacSerialCode");

                    b.Property<string>("CustomerComputerInfoProcessSerialCode");

                    b.Property<int>("SubscriptionId");

                    b.Property<DateTime?>("UpdatedDateTime");

                    b.HasKey("CustomerComputerInfoId");

                    b.ToTable("CustomerComputerInfos");
                });

            modelBuilder.Entity("AS_Licence.Entities.Model.Software.Software", b =>
                {
                    b.Property<int>("SoftwareId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDateTime");

                    b.Property<bool>("SoftwareIsActive");

                    b.Property<string>("SoftwareLastVersion");

                    b.Property<string>("SoftwareName");

                    b.Property<DateTime?>("UpdatedDateTime");

                    b.HasKey("SoftwareId");

                    b.ToTable("Softwares");
                });

            modelBuilder.Entity("AS_Licence.Entities.Model.Subscription.Subscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDateTime");

                    b.Property<int>("CustomerId");

                    b.Property<int>("SoftwareId");

                    b.Property<DateTime>("SubScriptionEndDate");

                    b.Property<int>("SubScriptionLicenceCount");

                    b.Property<DateTime>("SubScriptionStartDate");

                    b.Property<bool>("SubscriptionIsActive");

                    b.Property<DateTime?>("UpdatedDateTime");

                    b.HasKey("SubscriptionId");

                    b.ToTable("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
